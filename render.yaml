services:
  # PostgreSQL Database
  - type: pserv
    name: gymmawy-db
    env: docker
    plan: starter
    region: oregon
    disk:
      name: gymmawy-db-disk
      mountPath: /var/lib/postgresql/data
      sizeGB: 1
    envVars:
      - key: POSTGRES_DB
        value: gymmawy
      - key: POSTGRES_USER
        value: gymmawy_user
      - key: POSTGRES_PASSWORD
        generateValue: true

  # Backend API Service
  - type: web
    name: gymmawy-backend
    env: node
    plan: starter
    region: oregon
    buildCommand: npm install && npx prisma generate
    startCommand: node scripts/migrate-to-render.js && npm start
    rootDir: ./gymmawy-backend
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: gymmawy-db
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_EXPIRES_IN
        value: "7d"
      - key: JWT_ISSUER
        value: gymmawy
      - key: CORS_ORIGIN
        fromService:
          type: web
          name: gymmawy-frontend
          property: host
      - key: RATE_LIMIT_WINDOW_MS
        value: "900000"
      - key: RATE_LIMIT_MAX_REQUESTS
        value: "100"
    healthCheckPath: /api/health
    autoDeploy: true

  # Frontend Static Site
  - type: web
    name: gymmawy-frontend
    env: static
    plan: starter
    region: oregon
    buildCommand: npm install && npm run build
    staticPublishPath: ./gymmawy-frontend/build
    rootDir: ./gymmawy-frontend
    envVars:
      - key: REACT_APP_API_URL
        fromService:
          type: web
          name: gymmawy-backend
          property: host
      - key: REACT_APP_ENVIRONMENT
        value: production
      - key: GENERATE_SOURCEMAP
        value: "false"
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    autoDeploy: true

# Global configuration
databases:
  - name: gymmawy-db
    plan: starter
    region: oregon
